
#include "talker/npc_metropolice.talker"

// ============================================
//	AUTOMATIC RESPONSES
// ============================================



// TLK_PLAYER_RELOAD - speak this when player reloads and there are teammates nearby


rule PlayerPoliceDeployManhack
{
	criteria	IsPlayer ConceptPlayerDeployManhack IsPlayerVoiceMetroPolice
	response PoliceDeployManhack
}

response PoliceResponseReloading
{
	sentence "METROPOLICE_COVER_NO_AMMO"
	sentence "METROPOLICE_COVER_LOW_AMMO"
}

rule PolicePlayerReloading
{
	criteria	ConceptPlayerCoverReload IsPlayer IsPlayerVoiceMetroPolice
	response	PoliceResponseReloading
}

// TLK_PLAYER_PAIN
response PolicePlayerDie
{
	sentence "METROPOLICE_DIE"
}

rule PolicePlayerDie
{
	criteria	ConceptPlayerDied IsPlayer IsPlayerVoiceMetroPolice
	response	PolicePlayerDie
}


rule PolicePlayerPain
{
	criteria	ConceptPlayerPain IsPlayer IsPlayerVoiceMetroPolice
	response	PoliceResponsePain
}


rule PolicePlayerPainLt
{
	criteria	ConceptPlayerPain IsPlayer IsPlayerVoiceMetroPolice IsPlayerNotVeryWounded
	"PoliceSpokeLHTPain" "!=1" required
	
	applycontext	"PoliceSpokeLHTPain:1:20"
	response	PoliceResponsePainLight
}


rule PolicePlayerPainHv
{
	criteria	ConceptPlayerPain IsPlayer IsPlayerVoiceMetroPolice IsPlayerVeryWounded
	"PoliceSpokeHVYPain" "!=1" required
	
	applycontext	"PoliceSpokeHVYPain:1:10"
	response	PoliceResponsePainHeavy
}



rule PoliceKill
{
	criteria	ConceptPlayerKill IsPlayer IsPlayerVoiceMetroPolice
	response	CopKillGeneric
}

rule PoliceKillAntlion
{
	criteria	ConceptPlayerKill IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsAntlion
	response	CopKillBugs
}

rule PoliceKillCitizen
{
	criteria	ConceptPlayerKill IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsCitizen
	response	CopKillCitizens
}

rule PoliceKillZombie
{
	criteria	ConceptPlayerKill IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsAZombie
	response	CopKillZombies
}

rule PoliceKillParasite
{
	criteria	ConceptPlayerKill IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsAHeadcrab
	response	CopKillParasites
}

rule PoliceEnemy
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice

//	response	PoliceResponseEnemy
	response	CopAlertGeneric	// TODO: find sounds that are more like "I see an enemy"
}

// using CitizenHeadcrabGroup
rule PolicePlayerEnemyHeadcrab
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsHeadcrab
	response	CopAlertParasites
}

rule PoliceEnemyHeadcrabBlack
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsHeadcrabBlack
	response	CopAlertParasites
}

rule PoliceEnemyHeadcrabPoison
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsHeadcrabPoison
	response	CopAlertParasites
}

rule PoliceEnemyHeadcrabFast
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsHeadcrabFast
	response	CopAlertParasites
}

rule PolicePlayerEnemyZombie
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsZombie
	response	CopAlertZombies
}

rule PolicePlayerEnemyZombieTorso
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsZombieTorso
	response	CopAlertZombies
}

rule PolicePlayerEnemyZombieBlack
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsZombieBlack
	response	CopAlertZombies
}

rule PolicePlayerEnemyZombieFast
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsZombieFast
	response	CopAlertZombies
}

rule PolicePlayerEnemyZombine
{
	criteria	ConceptPlayerEnemy IsPlayer IsPlayerVoiceMetroPolice PlayerEnemyIsZombine
	response	CopAlertZombies
}

response PoliceCallHelp
{
	sentence "METROPOLICE_CALL_HELP"
}

rule PoliceCallHelp
{
	criteria	ConceptPlayerHelp IsPlayer IsPlayerVoiceMetroPolice
	response	PoliceCallHelp
}

response PolicePlayerGO
{
	sentence "METROPOLICE_OVER_HERE" weight 3
	sentence "METROPOLICE_AS_ADV_RALLY" weight 3
}

rule PolicePlayerGO
{
	criteria	ConceptPlayerGo IsPlayer IsPlayerVoiceMetroPolice
	response	PolicePlayerGO
}

response PolicePlayerIncoming
{
	sentence "METROPOLICE_DANGER" weight 2
	sentence "METROPOLICE_DANGER_VEHICLE" weight 3
}

rule PolicePlayerIncoming
{
	criteria	ConceptPlayerIncoming IsPlayer IsPlayerVoiceMetroPolice
	response	PolicePlayerIncoming
}

